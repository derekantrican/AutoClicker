<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        BQj8kwWo/JMF//yTBf/8kwX//JMF//yTBf/8kwX//JMF//yTBf/8kwX//JME//ySBP/8kwT//JMF//yT
        Bf/8jwT//IMB//yCAa38hQEK/IQBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD8kwUA/JMFAPyTBT78kwXs/JMF//yTBf/8kwX//JMF//yTBf/8kwX//JMF//yTBf/8kwX//JMF//yT
        Bf/8kwX//JMF//yIAv/8ggHv/IMBQvyCAQD8hwIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD8kwUA/JMFBPyTBZn8kwX//JMF//yTBf/8kwX//JMF//yTBf/8kwX//JMF//yT
        Bf/8kwX//JMF//yTBf/8jgT//IMB//yCAZ78hgEF/IQBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8kwUA/JMFMvyTBeX8kwX//JMF//yTBf/8kwX//JMF//yT
        Bf/8kwX//JMF//yTBf/8kwX//JIF//yHAv/8ggHn/IMBNvyDAQD7lAYAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPyTBQD8kwUB/JMFivyTBf/8kwX//JMF//yT
        Bf/8kwX//JMF//yTBf/8kwX//JMF//yTBf/8jQT//IMB//yCAY/8iQMC/IUCAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPyTBQD8kwUn/JMF2/yT
        Bf/8kwX//JMF//yTBf/8kwX//JMF//yTBf/8kwX//JIF//yGAv/8ggHf/IMBKvyDAQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/JMFAPyT
        BQD8kwV6/JMF//yTBf/8kwX//JMF//yTBf/8kwX//JMF//yTBf/8jAP//IIB//yDAX/8ZAAA/IUCAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/JMFAPyTBR38kwXR/JMF//yTBf/8kwX//JMF//yTBf/8kwX//JEF//yFAv/8ggHV/IQBIPyD
        AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD8kwUA/JMFAPyTBWv8kwX8/JMF//yTBf/8kwX//JMF//yTBf/8iwP//IIB/fyD
        AXD8fwAA/IYCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8kwUA/JMFFfyTBcX8kwX//JMF//yTBf/8kwX//JEE//yF
        Av/8ggHJ/IQBF/yEAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPyTBQD8kwUA/JMFW/yTBfj8kwX//JMF//yT
        Bf/8igP//IIB+vyDAWD8gQEA/IYCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPyTBQD8kwUN/JMFq/yT
        Bf/8kwX//I8E//yEAf/8ggGw/IQCD/yEAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/JQFAPyT
        BQD8kwUk/JMFq/yPBPf8hgL4/IIBsfyEASf8ggEA/Y8DAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//GP///xj///8Y////GMf/4x/H/+MYx//jGMf/4xjH/+P4x//jGMf/Bx
        jg/wMYwP4AGIB+AHgAfwAYAP8AAAD/gAAB/4AAAf/AAAP/wAAD/+AAB//gAAf/8AAP//AAD//4AB///A
        A///wAP//+AH///gB///8A////AP///4H/8=
</value>
  </data>
</root>